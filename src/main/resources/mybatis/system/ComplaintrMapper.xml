<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.complaintr.dao.ComplaintrDao">

	<select id="get" resultType="com.bootdo.complaintr.domain.ComplaintrDO">
		select `id`,`title`,`content`,`times`,`configure`,`service`,`user`,`programme`,`score` from work_complaintr where id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.complaintr.domain.ComplaintrDO">
		select `id`,`title`,`content`,`times`,`configure`,`service`,`user`,`programme`,`score` from work_complaintr
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="title != null and title != ''"> and title = #{title} </if>
		  		  <if test="content != null and content != ''"> and content = #{content} </if>
		  		  <if test="times != null and times != ''"> and times = #{times} </if>
		  		  <if test="configure != null and configure != ''"> and configure = #{configure} </if>
		  		  <if test="service != null and service != ''"> and service = #{service} </if>
		  		  <if test="user != null and user != ''"> and user = #{user} </if>
		  		  <if test="programme != null and programme != ''"> and programme = #{programme} </if>
		  		  <if test="score != null and score != ''"> and score = #{score} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from work_complaintr
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="title != null and title != ''"> and title = #{title} </if>
		  		  <if test="content != null and content != ''"> and content = #{content} </if>
		  		  <if test="times != null and times != ''"> and times = #{times} </if>
		  		  <if test="configure != null and configure != ''"> and configure = #{configure} </if>
		  		  <if test="service != null and service != ''"> and service = #{service} </if>
		  		  <if test="user != null and user != ''"> and user = #{user} </if>
		  		  <if test="programme != null and programme != ''"> and programme = #{programme} </if>
		  		  <if test="score != null and score != ''"> and score = #{score} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.complaintr.domain.ComplaintrDO" useGeneratedKeys="true" keyProperty="id">
		insert into work_complaintr
		(
			`title`, 
			`content`, 
			`times`, 
			`configure`, 
			`service`, 
			`user`, 
			`programme`, 
			`score`
		)
		values
		(
			#{title}, 
			#{content}, 
			#{times}, 
			#{configure}, 
			#{service}, 
			#{user}, 
			#{programme}, 
			#{score}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.complaintr.domain.ComplaintrDO">
		update work_complaintr 
		<set>
			<if test="title != null">`title` = #{title}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="times != null">`times` = #{times}, </if>
			<if test="configure != null">`configure` = #{configure}, </if>
			<if test="service != null">`service` = #{service}, </if>
			<if test="user != null">`user` = #{user}, </if>
			<if test="programme != null">`programme` = #{programme}, </if>
			<if test="score != null">`score` = #{score}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from work_complaintr where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from work_complaintr where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>